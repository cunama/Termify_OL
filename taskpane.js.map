{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, Word */\nwindow.identifiedTerms = [];\n\nOffice.onReady((info) => {\n  const stored = localStorage.getItem(\"identifiedTerms\");\n  try {\n    const parsed = JSON.parse(stored);\n    if (Array.isArray(parsed) && parsed.length > 0 && typeof parsed[0] === \"object\") {\n      console.log(\"🧹 清除旧格式 identifiedTerms...\");\n      localStorage.removeItem(\"identifiedTerms\");\n    }\n  } catch (e) {\n    console.warn(\"⚠️ 无法解析 localStorage 中的 identifiedTerms\");\n    localStorage.removeItem(\"identifiedTerms\");\n  }\n\n  if (info.host === Office.HostType.Word) {\n    console.log(\"✅ Office is ready\");\n\n    const sideloadMsg = document.getElementById(\"sideload-msg\");\n    if (sideloadMsg) sideloadMsg.style.display = \"none\";\n\n    const appBody = document.getElementById(\"app-body\");\n    if (appBody) appBody.style.display = \"flex\";\n\n    const runBtn = document.getElementById(\"run\");\n    if (runBtn) runBtn.addEventListener(\"click\", run);\n\n    const quoteBtn = document.getElementById(\"terms-quote\");\n    if (quoteBtn) quoteBtn.addEventListener(\"click\", termsquote);\n\n    const sortBtn = document.getElementById(\"sort-terms\");\n    if (sortBtn) sortBtn.addEventListener(\"click\", sortDefinitionParagraphs);\n\n    const highlightBtn = document.getElementById(\"terms-hightlight\");\n    if (highlightBtn) highlightBtn.addEventListener(\"click\", highlightIdentifiedTerms);\n\n    const openBtn = document.getElementById(\"open-term-manager\");\n    if (openBtn) {\n      let dialogRef = null;\n      openBtn.addEventListener(\"click\", () => {\n        console.log(\"🟢 Launching term-manager dialog...\");\n        Office.context.ui.displayDialogAsync(\n          window.location.origin + \"/term-manager.html\",\n          { height: 50, width: 50, displayInIframe: true },\n          (asyncResult) => {\n            if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n              dialogRef = asyncResult.value;\n              dialogRef.addEventHandler(Office.EventType.DialogMessageReceived, (arg) => {\n                if (arg.message === \"close\") {\n                  dialogRef.close();\n                  console.log(\"🔒 Dialog closed by child page\");\n                }\n              });\n            } else {\n              console.error(\"❌ Dialog failed to open:\", asyncResult.error.message);\n            }\n          }\n        );\n      });\n    }\n  }\n});\n\nexport async function run() {\n  return Word.run(async (context) => {\n    const paragraph = context.document.body.insertParagraph(\"Hello World\", Word.InsertLocation.end);\n    paragraph.font.color = \"blue\";\n    await context.sync();\n  });\n}\n\nasync function termsquote() {\n  await Word.run(async (context) => {\n    const autoAddQuotes = document.getElementById(\"auto-add-quotes\")?.checked ?? true;\n    const autoUnderline = document.getElementById(\"auto-underline\")?.checked ?? true;\n    const autoBold = document.getElementById(\"auto-bold\")?.checked ?? true;\n\n    const paragraphs = context.document.getSelection().paragraphs;\n    paragraphs.load(\"items\");\n    await context.sync();\n\n    paragraphs.items.forEach((para) => para.load(\"text\"));\n    await context.sync();\n\n    for (const para of paragraphs.items) {\n      const originalText = para.text;\n      const match = originalText.match(/(.+?)\\s+(means|mean|includes|has the meaning)\\b/i);\n      if (!match) continue;\n\n      const rawTerms = match[1].trim();\n      const keyword = match[2];\n      const definition = originalText.slice(match.index + match[0].length).trim();\n\n      const { terms, joiners } = tokenizeTerms(rawTerms);\n      const formattedTerms = [];\n\n      for (const term of terms) {\n        const bracketMatch = term.match(/^(.+?)(\\s*\\(.*\\))?$/);\n        const cleanTerm = bracketMatch[1].replace(/^['\"“”]|['\"“”]$/g, '').trim();\n\n        if (!window.identifiedTerms.some((item) => item.term === cleanTerm)) {\n          window.identifiedTerms.push({ term: cleanTerm, keyword, note: definition });\n        }\n\n        let formatted = autoAddQuotes ? `“${cleanTerm}”` : cleanTerm;\n        if (bracketMatch[2]) formatted += bracketMatch[2];\n\n        formattedTerms.push(formatted);\n      }\n\n      const rebuiltTerms = formattedTerms.map((t, i) => t + (joiners[i] ? ` ${joiners[i]} ` : '')).join('').trim();\n      const newText = `${rebuiltTerms} ${keyword} ${definition}`;\n\n      const inserted = para.insertText(newText, Word.InsertLocation.replace);\n      inserted.load(\"text\");\n      await context.sync();\n\n      // 只在关键词前搜索\n      const keywordPosition = inserted.text.indexOf(` ${keyword} `);\n      const termsSearchArea = inserted.getRange(\"Start\").expandTo(inserted.getRange(\"Start\").getTextRanges([` ${keyword} `], false).getFirst());\n\n      for (const term of formattedTerms) {\n        const coreTerm = term.replace(/^['\"“”]|['\"“”]$/g, '').replace(/\\(.*\\)$/, '').trim();\n        const results = termsSearchArea.search(coreTerm, { matchCase: false, matchWholeWord: true });\n        results.load(\"items\");\n        await context.sync();\n\n        if (results.items.length === 0) continue;\n\n        const r = results.items[0]; // 只处理第一个匹配\n        r.load(\"text, font\");\n        await context.sync();\n\n        // 处理可能存在的引号\n        const startsWithQuote = /^['\"“”]/.test(r.text);\n        const endsWithQuote = /['\"“”]$/.test(r.text);\n\n        if (startsWithQuote || endsWithQuote) {\n          const subRanges = r.split([\"\\\"\", \"“\", \"”\"], true);\n          subRanges.load(\"items\");\n          await context.sync();\n\n          for (const sub of subRanges.items) {\n            if (!/^['\"“”]+$/.test(sub.text.trim()) && sub.text.trim()) {\n              if (autoBold) sub.font.bold = true;\n              if (autoUnderline) sub.font.underline = \"Single\";\n            }\n          }\n        } else {\n          if (autoBold) r.font.bold = true;\n          if (autoUnderline) r.font.underline = \"Single\";\n        }\n      }\n    }\n\n    await context.sync();\n    localStorage.setItem(\"identifiedTerms\", JSON.stringify(window.identifiedTerms));\n    showToast(\"Term identification and formatting completed.\");\n  });\n}\n\nfunction tokenizeTerms(raw) {\n  const terms = [];\n  const joiners = [];\n  const splitRegex = /(.+?)(\\s*,\\s*|\\s+or\\s+|\\s+and\\s+|$)/gi;\n\n  let match;\n  while ((match = splitRegex.exec(raw)) !== null) {\n    const term = match[1].trim();\n    const joiner = match[2]?.trim();\n    if (term) terms.push(term);\n    if (joiner) joiners.push(joiner);\n  }\n\n  return { terms, joiners };\n}\n\n\n\nfunction processDefinitionText(text, options = {}) {\n  const triggerWords = [\"means\", \"mean\", \"has the meaning\", \"includes\"];\n  const regex = new RegExp(`(.+?)\\\\s+(${triggerWords.join(\"|\")})\\\\b`, \"i\");\n  const match = text.match(regex);\n  if (!match) return { replacedText: text, styleTerms: [] };\n\n  const rawTerms = match[1].trim();\n  const keyword = match[2];\n  const rest = text.slice(match.index + match[0].length).trim();\n\n  const { terms, joiners } = tokenizeTerms(rawTerms);\n  const styleTerms = [];\n\n  const formattedTerms = terms.map((term) => {\n    const m = term.match(/^(.+?)(\\s*\\(.*\\))?$/);\n    if (!m) return term;\n\n    let core = m[1].trim();\n    const extra = m[2] || \"\";\n\n    core = core.replace(/^[\"“]/, \"\").replace(/[\"”]$/, \"\");\n\n    // ✅ 保存去引号版本\n    if (!window.identifiedTerms.some((item) => item.term === core)) {\n      window.identifiedTerms.push({ term: core, keyword, note: rest });\n    }\n\n    // ✅ 把去引号版本加入 styleTerms 用于搜索匹配\n    styleTerms.push(core);\n\n    // ✅ 把有引号的版本也加入 styleTerms（方便精准匹配后处理）\n    if (options.autoAddQuotes) {\n      styleTerms.push(`“${core}”`);\n      styleTerms.push(`\"${core}\"`);\n    }\n\n    const display = options.autoAddQuotes ? `“${core}”` : core;\n    return `${display}${extra}`;\n  });\n\n  let rebuilt = \"\";\n  for (let i = 0; i < formattedTerms.length; i++) {\n    rebuilt += formattedTerms[i];\n    if (i < joiners.length) rebuilt += ` ${joiners[i]} `;\n  }\n\n  const replacedText = `${rebuilt.trim()} ${keyword} ${rest}`;\n  return { replacedText, styleTerms };\n}\n\n\nfunction isConnector(token) {\n  return /^(,|and|or)$/i.test(token.trim());\n}\n\nasync function sortDefinitionParagraphs() {\n  await Word.run(async (context) => {\n    const selection = context.document.getSelection();\n    const paragraphs = selection.paragraphs;\n    paragraphs.load(\"items\");\n    await context.sync();\n    \n    selection.load(\"text\");\n    await context.sync();\n    // ✅ 检查是否有选中内容\n    if (!selection.text || selection.text.trim() === \"\") {\n      showToast(\"Please select content before sorting terms.\");\n      return;\n    }\n\n    const paragraphData = [];\n\n    for (const para of paragraphs.items) {\n      const range = para.getRange();\n      range.load([\"text\", \"font/bold\", \"font/color\", \"font/italic\", \"font/underline\"]);\n      await context.sync();\n\n      const text = range.text?.trim();\n      if (!text) continue;\n\n      const match = text.match(/“(.+?)”/);\n      const key = match ? match[1].toLowerCase() : text.toLowerCase();\n\n      paragraphData.push({\n        key,\n        text,\n        font: {\n          color: range.font.color || \"auto\",\n          bold: typeof range.font.bold === \"boolean\" ? range.font.bold : false,\n          italic: typeof range.font.italic === \"boolean\" ? range.font.italic : false,\n          underline: range.font.underline || \"None\",\n        },\n      });\n    }\n\n    // 按 key 升序排列\n    paragraphData.sort((a, b) => a.key.localeCompare(b.key, undefined, { sensitivity: \"base\" }));\n\n    // 插入新段落\n    let insertAfter = paragraphs.items[paragraphs.items.length - 1];\n    for (const item of paragraphData) {\n      const newPara = insertAfter.insertParagraph(\"\", Word.InsertLocation.after);\n      const insertedRange = newPara.insertText(item.text, Word.InsertLocation.replace);\n\n      insertedRange.font.color = item.font.color;\n      insertedRange.font.bold = item.font.bold;\n      insertedRange.font.italic = item.font.italic;\n      insertedRange.font.underline = item.font.underline;\n\n      insertAfter = newPara;\n    }\n\n    await context.sync();\n\n    // 删除原选中段落\n    for (let i = paragraphs.items.length - 1; i >= 0; i--) {\n      paragraphs.items[i].delete();\n    }\n\n    await context.sync();\n    showToast(\"Sorting completed.\\nTo undo this operation, please press Ctrl + Z twice.\");\n  });\n}\n\n\nfunction showToast(message, duration = 5000) {\n  const toast = document.getElementById(\"custom-toast\");\n  if (!toast) return;\n  toast.innerHTML = message.replace(/\\n/g, \"<br>\");\n  toast.style.display = \"block\";\n  setTimeout(() => {\n    toast.style.display = \"none\";\n  }, duration);\n}\n\nasync function highlightIdentifiedTerms() {\n  await Word.run(async (context) => {\n    if (!window.identifiedTerms || window.identifiedTerms.length === 0) {\n      showToast(\"No identified terms found. Please identify terms first.\");\n      return;\n    }\n\n    const highlightSelect = document.getElementById(\"highlight-style\");\n    const style = highlightSelect ? highlightSelect.value : \"underline\";\n\n    const selection = context.document.getSelection();\n    selection.load(\"text\");\n    await context.sync();\n\n    if (!selection.text || selection.text.trim() === \"\") {\n      showToast(\"Please select the content area where you want to highlight terms.\");\n      return;\n    }\n\n    for (const item of window.identifiedTerms) {\n      const term = typeof item === \"string\" ? item : item.term;\n      if (!term || typeof term !== \"string\") continue;\n\n      const searchResults = selection.search(term, { matchWholeWord: true });\n      searchResults.load(\"items\");\n      await context.sync();\n\n      for (const range of searchResults.items) {\n        if (style === \"underline\") {\n          range.font.underline = \"Single\";\n        } else if (style === \"bold\") {\n          range.font.bold = true;\n        }\n      }\n    }\n\n    await context.sync();\n    showToast(\"Term highlighting completed.\");\n  });\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Termify Agent</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body> <h2>Termify Agent</h2> <button id=\\\"terms-quote\\\">Identify and Format Terms</button> <label style=\\\"display:block;margin-top:10px\\\"> <input type=\\\"checkbox\\\" id=\\\"auto-add-quotes\\\" checked=\\\"checked\\\"/> Add quotes around identified terms </label> <label style=\\\"display:block;margin-top:5px\\\"> <input type=\\\"checkbox\\\" id=\\\"auto-underline\\\"/> Underline identified terms </label> <label style=\\\"display:block;margin-top:5px\\\"> <input type=\\\"checkbox\\\" id=\\\"auto-bold\\\" checked=\\\"checked\\\"/> Bold identified terms </label> <button id=\\\"open-term-manager\\\" style=\\\"margin-top:15px\\\">Manage Terms</button> <button id=\\\"sort-terms\\\">Sort terms</button> <div id=\\\"custom-toast\\\" style=\\\"display:none;position:fixed;bottom:20px;right:20px;background-color:#323232;color:#fff;padding:12px 18px;border-radius:6px;box-shadow:0 0 10px rgba(0,0,0,.3);font-size:14px;z-index:9999\\\"> Sorting completed.<br>To undo this operation, please press Ctrl + Z twice. </div> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","n","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","run","_run","_callee2","_context2","Word","_ref","_callee","context","_context","body","insertParagraph","InsertLocation","end","font","color","sync","_x","termsquote","_termsquote","_callee4","_context6","_ref2","_callee3","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","_document$getElementB5","_document$getElementB6","autoAddQuotes","autoUnderline","autoBold","paragraphs","_iterator","_step","_loop","_context5","getElementById","checked","getSelection","load","items","para","_createForOfIteratorHelper","originalText","match","rawTerms","keyword","_tokenizeTerms2","terms","joiners","formattedTerms","_iterator2","_step2","_loop2","rebuiltTerms","newText","inserted","termsSearchArea","_i","_formattedTerms","term","coreTerm","results","startsWithQuote","endsWithQuote","subRanges","_iterator3","_step3","sub","_context4","text","trim","index","tokenizeTerms","bracketMatch","cleanTerm","formatted","_context3","identifiedTerms","some","item","note","concat","t1","map","join","insertText","indexOf","getRange","expandTo","getTextRanges","getFirst","search","matchCase","matchWholeWord","split","bold","underline","err","t0","localStorage","setItem","JSON","stringify","showToast","_x2","raw","splitRegex","exec","_match$","joiner","sortDefinitionParagraphs","_sortDefinitionParagraphs","_callee6","_context8","_ref3","_callee5","selection","paragraphData","_iterator4","_step4","_range$text","range","insertAfter","_i2","_paragraphData","newPara","insertedRange","_context7","toLowerCase","italic","sort","localeCompare","sensitivity","after","delete","_x3","message","duration","toast","innerHTML","style","display","setTimeout","highlightIdentifiedTerms","_highlightIdentifiedTerms","_callee8","_context10","_ref4","_callee7","highlightSelect","_iterator5","_step5","searchResults","_iterator6","_step6","_context9","_x4","Office","onReady","info","stored","getItem","parsed","parse","Array","isArray","console","log","removeItem","warn","host","HostType","sideloadMsg","appBody","runBtn","addEventListener","quoteBtn","sortBtn","highlightBtn","openBtn","dialogRef","ui","displayDialogAsync","origin","height","width","displayInIframe","asyncResult","status","AsyncResultStatus","Succeeded","addEventHandler","EventType","DialogMessageReceived","close","error","URL"],"sourceRoot":""}